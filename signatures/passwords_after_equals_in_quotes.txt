Passwords after = in '' or ""
http://rubular.com/r/ewOquDXkKG

//--TODO to implement mostly to get rid of false positives
.body("""{"password":"${password}"}""")
        for (String password: parameters.keySet()) {
case CLIENT_password: return authenticateClientCredentials(request); //
$config['dbpassword'] = "dbpassword"; //should match
"password":["password","Password"]  //hard to ignore, most likely false positive
logger.debug("Located credentials in request, with password: " + loginInfo.keySet());
return "AutologinRequest [username=" + username + ", password=" + password + "]";
client-passwd="${CLIENT_passwd:appclientpasswd}
   -data \"xs-username=" + varUser + "&xs-password=" + varPassword + "\
export GITPASSWORD="${password}"
UAA_ADMIN_SECRET="$(fromContext .context.imports.cf.uaa.admin.client_secret)"
PASSWORD='<%= p("postgres.password") %>'


//--match
//Overall idea: search for hard-coded passwords assignments (="")
// support code (mostly Java), yml and json files

password="my_pw" // should be foundPlease generate random password for each landscape
"password": "Mustermann"
password=="wow" //hard coded pw check
password=='wow' //hard coded pw check
<creds password="lj"/> //xml - note: XML not fully supported
//This is my password="lala" in a comment


//--no match

expirePasswordInMonths: 6

//This is my password in a code comment
password    =  my_pw // should not be found -> buy false positive here
passwd=
password =
password
password=abc123
passw0rd=abc123
password =abc123
password =  abc123
password=   $$$ddididi`^
password          =     bbbbb
<password>init1234</password>

public static final String FORGOT_PASSWORD_LINK = "forgotPasswordLink";
FORGOT_PASSWORD_LINK
new Prompt("password", "password", "Password")
if (!StringUtils.hasText(password)) {
private String privatepassword;
this.privatepassword = privatepassword
ALTER TABLE users ADD COLUMN passwd_lastmodified TIMESTAMP NULL;



